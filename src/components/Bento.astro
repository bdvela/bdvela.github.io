---
import BentoItem from "@/components/BentoItem.astro"
import { getI18N } from "@/i18n/"

const { currentLocale } = Astro
const i18n = getI18N({ currentLocale })
---

<section
  class={`
    w-full 
    grid lg:grid-cols-10 auto-rows-[30rem] gap-8
    mx-auto 
  `}
>
  <BentoItem class="col-span-10 lg:col-span-4" title={i18n.PROJECTS.PROJECT_1.TITLE} subtitle={i18n.PROJECTS.PROJECT_1.SUBTITLE}>
    <div
      slot="image"
      class="background transition-scale absolute bottom-0 left-0 top-0
        -z-10 h-full w-full bg-yellow-500
        bg-cover bg-center bg-no-repeat opacity-90 bg-blend-luminosity duration-1000 ease-in-out group-hover:scale-110"
      data-src="/grupo-mofima.webp"
    >
    </div>

    <p
      slot="content"
      class="max-w-xl text-base md:text-lg"
      set:html={i18n.PROJECTS.PROJECT_1.DESCRIPTION}
    />
  </BentoItem>
  <BentoItem
    class="col-span-10 lg:col-span-6"
    title={i18n.PROJECTS.PROJECT_2.TITLE}
    subtitle={i18n.PROJECTS.PROJECT_2.SUBTITLE}
  >
    <div
      slot="image"
      class="background transition-scale absolute bottom-0 left-0 top-0
    -z-10 h-full w-full bg-blue-800
    bg-cover bg-center bg-no-repeat opacity-90 bg-blend-luminosity duration-1000 ease-in-out group-hover:scale-110"
      data-src="/beizzon.webp"
    >
    </div>
    <p
      slot="content"
      class="max-w-xl text-base md:text-lg"
      set:html={i18n.PROJECTS.PROJECT_2.DESCRIPTION}
    />
  </BentoItem>
  <BentoItem
    class="col-span-10 lg:col-span-6"
    title={i18n.PROJECTS.PROJECT_3.TITLE}
    subtitle={i18n.PROJECTS.PROJECT_3.SUBTITLE}
  >
    <div
      slot="image"
      class="background transition-scale absolute bottom-0 left-0 top-0
        -z-10 h-full w-full bg-blue-900
        bg-cover bg-center bg-no-repeat opacity-90 bg-blend-luminosity duration-1000 ease-in-out group-hover:scale-110"
      data-src="/chiringuito.webp"
    >
    </div>
    <p
      slot="content"
      class="max-w-xl text-base md:text-lg"
      set:html={i18n.PROJECTS.PROJECT_3.DESCRIPTION}
    />
  </BentoItem>
  <BentoItem class="col-span-10 lg:col-span-4" title={i18n.PROJECTS.PROJECT_4.TITLE} subtitle={i18n.PROJECTS.PROJECT_4.SUBTITLE}>
    <div
      slot="image"
      class="background transition-scale absolute bottom-0 left-0 top-0
        -z-10 h-full w-full bg-blue-950
        bg-cover bg-center bg-no-repeat opacity-90 bg-blend-luminosity duration-1000 ease-in-out group-hover:scale-110"
      data-src="/retcamp_2022.webp"
    >
    </div>
    <p
      slot="content"
      class="max-w-xl text-base md:text-lg"
      set:html={i18n.PROJECTS.PROJECT_4.DESCRIPTION}
    />
  </BentoItem>
  <BentoItem class="col-span-10 lg:col-span-4" title={i18n.PROJECTS.PROJECT_5.TITLE} subtitle={i18n.PROJECTS.PROJECT_5.SUBTITLE}>
    <div
      slot="image"
      class="background transition-scale absolute bottom-0 left-0 top-0
        -z-10 h-full w-full bg-blue-950
        bg-cover bg-center bg-no-repeat opacity-90 bg-blend-luminosity duration-1000 ease-in-out group-hover:scale-110"
      data-src="/diswallet.webp"
    >
    </div>

    <p
      slot="content"
      class="max-w-xl text-base md:text-lg"
      set:html={i18n.PROJECTS.PROJECT_5.DESCRIPTION}
    />
  </BentoItem>
  <BentoItem
    class="col-span-10 lg:col-span-6"
    title={i18n.PROJECTS.PROJECT_6.TITLE}
    subtitle={i18n.PROJECTS.PROJECT_6.SUBTITLE}
  >
    <div
      slot="image"
      class="background transition-scale absolute bottom-0 left-0 top-0
    -z-10 h-full w-full bg-blue-800
    bg-cover bg-center bg-no-repeat opacity-90 bg-blend-luminosity duration-1000 ease-in-out group-hover:scale-110"
      data-src="/task_manager.webp"
    >
    </div>
    <p
      slot="content"
      class="max-w-xl text-base md:text-lg"
      set:html={i18n.PROJECTS.PROJECT_6.DESCRIPTION}
    />
  </BentoItem>
</section>

<script>
  document.addEventListener("astro:page-load", () => {
    const backgrounds = document.querySelectorAll(
      ".background"
    ) as NodeListOf<HTMLElement>

    if (window.IntersectionObserver == null) {
      backgrounds.forEach((bkg) => {
        bkg.style.backgroundImage = "url('" + bkg.dataset.src + "')"
      })
      return
    }

    function handleIntersection(entries: IntersectionObserverEntry[]) {
      entries.map((entry) => {
        if (entry.isIntersecting) {
          const target = entry.target as HTMLElement
          const { style, dataset } = target
          // Item has crossed our observation
          // threshold - load src from data-src
          style.backgroundImage = "url('" + dataset.src + "')"
          // Job done for this item - no need to watch it!
          observer.unobserve(entry.target)
        }
      })
    }

    const observer = new IntersectionObserver(handleIntersection, {
      rootMargin: "100px",
    })

    backgrounds.forEach((bkg) => observer.observe(bkg))
  })
</script>